//==============================================================
//= Script job_changer.txt                                     =
//===== Par: ===================================================
//= Kylvan                                                     =
//= Kylvan@laposte.net                                         =
//= Although all this quest is in French, you can mail me in   =
//= English, I would be able to answer you.                    =
//===== Version Actuelle: ======================================
//= 1.3                                                        =
//===== Compatible Avec: =======================================
//= Freya 2.0.2 and newer.                                     =
//==============================================================
//========= Description du changement de classe ================
//==============================================================
//= NPC qui permet de renaitre, et de changer de classe.       =
//= Un joueur ayant fait la quete clic sur le NPC et peut      =
//= devenir high novice, en sauvegardant sa classe d'origine.  =
//= Si un High Novice job lv 10 clic sur ce NPC, il pourra     =
//= devenir High Classe 1, en fonction de son job d'avant sa   =
//= renaissance. Un High Classe1 joblv 40 ou plus peut choisir =
//= choisir l'un des deux job adv s'offrant à lui.             =
//=                                                            =
//= Si la renaissance a eu lieu au lv99/50, le joueur obtient  =
//= un tiger mask +9 a son nom ainsi qu'un oeuf d'Alice ou de  =
//= Zherlthsh.                                                 =
//=                                                            =
//= Les skill de quete sont sauvegardés, et le joueur les      =
//= recupere lorsqu'il a la classe adaptée. Tous les high      =
//= novices acquierent le skill play dead a la renaissance,    =
//= car j'ai eu la flemme de chercher comment verifier qu'il   =
//= avait fait la quete.                                       =
//==============================================================
//= Ex:                                                        =
//= Un Knight 99 devient High Novice, recevra Act Dead et      =
//= s'il a fait la quete, aura First Aid. Puis deviendra High  =
//= SwordsMan et recuperera ses skill de quete s'il les a fait =
//= avant sa renaissance puis il aura le choix entre Paladin   =
//= et Lord Knight.                                            =
//==============================================================
//============= Description du coliseum ========================
//==============================================================
//= Les joueurs classe2 reborn job level 40 et plus peuvent se =
//= rendre 2 fois par jour  pendant 15min en payant 100k par   =
//= personne dans une arene (guild_vs1.gat). Le joueur         =
//= initialisant l'arene donne le nom de ses coequipiers et    =
//= ceux ci ont 2min pour se presenter a l'arene. Faute de quoi=
//= celle ci sera fermée. Dans l'arene, un MvP est summon, des =
//= que les joueurs le tue, un autre est summon et ainsi de    =
//= suite pendant 15minutes.                                   =
//===== Commentaires: ==========================================
//= Un petit systeme de log permet de sauvegarder les dates et =
//= heures auxquelles les joueurs ont passé les differentes    =
//= epreuves, la classe et le level du joueur renaissant sont  =
//= egalement sauvegardées. Ces données sont accessibles à un  =
//= GM:60 ou plus.                                             =
//===== Rajouts / Corrections ==================================
//= v.1.1 : Fonctions 'setmapflag' utilisées pour nosave       =
//=         retirées (Répétitions, déjà utilisées avec         =
//=         'setmapflagnosave') [Yor]                          =
//= v.1.2 : Rajout des fonctions 'F_ToHigh', 'F_Rebirth' et    =
//=         'F_BlockHigh' (utilisées par les NPC Classes 1/2.  =
//=         [Tets-UO]                                          =
//= v.1.3 : Les HighClasse1 n'ont plus le choix de leur        =
//=         leur classe2adv. [Tets-UO]]                        =
//==============================================================

// -== Warp manquants ==-
valkyrie.gat,48,73,0	warp	valky	1,1,valkyrie.gat,48,64,0
valkyrie.gat,48,66,0	warp	valky	1,1,valkyrie.gat,48,75,0

// -== Changeur de Job ==-
valkyrie.gat,49,86,4	script	Envoyée des Dieux	811,{

	if (getgmlevel(0)>=60) menu "Panneau de controle GM",L_GM,"Faire comme un joueur normal",-;
	getMapXY @map$,@X,@Y,0,strcharinfo(0);
	if (!(((@X==49)||(@X==48))&&((@Y==82)||(@Y==83)))) goto L_approche;
	if ((readparam(19)<4000)&&(sage==5)) goto L_Hnovice;
	if ((readparam(19)==4001)&&(readparam(55)>=10)&&(sage==5)) goto L_HClasse1;
	if ((readparam(19)<=4007)&&(readparam(55)>=40)&&(sage==5)) goto L_HClasse2;
	if ((readparam(19)>=4008)&&(readparam(19)<=4021)&&(readparam(55)>=40)&&(sage==5)) goto L_Coliseum;
	if ((readparam(19)<=4021)&&(sage==5)) goto L_Bienvenue;
	mes "[Envoyée des Dieux]";
	mes "Vous n'avez rien a faire en ces lieux !";
	next;
	mes "";
	warp "prontera.gat",155,155;
	close;

L_approche:
	mes "[Envoyée des Dieux]";
	mes "Placez vous au centre du Cercle.";  //ca c'est juste pour le folklore :P
	close;

L_Hnovice:
	if (checkcart(0) > 0) goto L_Cart;
	if (checkfalcon(0)> 0) goto L_Falcon;
	if (checkriding(0)> 0) goto L_Peco;
	if (readparam(12) > 0) goto L_SkPoints;
	if (hasitems(0)!=0) goto L_Depostorage;
	mes "[Envoyée des Dieux]";
	mes "Les Dieux vous estiment digne de leur plus grand présent. Afin de mieux comprendre le monde actuel, Ils ont besoin de l'ensemble de vos connaissances, Ils ne vous deliveront leur présent ultime qu'à cette condition.";
	next;
	mes "[Envoyée des Dieux]";
	mes "Acceptez-vous ?";
	menu "Non",L_non,"Oui",-;
	announce "Félicitations à "+strcharinfo(0)+", à qui les Dieux ont accordé la Renaissance !",16;
	set classe,readparam(19); //enregistrement de la classe pour pouvoir mettre la high classe 1 adaptée.
	set lvlreborn,readparam(11); //enregistrement du level auquel est effectué la reborn, ca peut etre utile pour d'autre NPC
	savepoint "new_1-1.gat",53,111;

	//recupere le lvl des skill de quete, la flemme de faire en fonction de la classe du type. Ca met 0 si il a pas le skill.
	set firstaid,getskilllv(142);
	set mhprecov,getskilllv(144);
	set atkweak,getskilllv(145);
	set autobers,getskilllv(146);
	set arrowcrea,getskilllv(147);
	set chargearrow,getskilllv(148);
	set throwsand,getskilllv(149);
	set backslide,getskilllv(150);
	set takestone,getskilllv(151);
	set throwstone,getskilllv(152);
	set cartrevol,getskilllv(153);
	set changecart,getskilllv(154);
	set crazy,getskilllv(155);
	set holylight,getskilllv(156);
	set energycoat,getskilllv(157);


//tout le petit bordel pour le systeme de log date1$ est le tableau contenant les dates de Yuno, date2$ celle de l'epreuv 1 etc..
//persoreborn$ contient le nom du perso.
	set $persoreborn$[$indice],strcharinfo(0);
	set $date1$[$indice],jour1+"/"+mois1+"/"+an1+" à "+heure1+"h"+min1+"min"+sec1+"sec.";
	set $date2$[$indice],jour2+"/"+mois2+"/"+an2+" à "+heure2+"h"+min2+"min"+sec2+"sec.";
	set $date3$[$indice],jour3+"/"+mois3+"/"+an3+" à "+heure3+"h"+min3+"min"+sec3+"sec.";
	set $date4$[$indice],jour4+"/"+mois4+"/"+an4+" à "+heure4+"h"+min4+"min"+sec4+"sec.";
	set $date5$[$indice],jour5+"/"+mois5+"/"+an5+" à "+heure5+"h"+min5+"min"+sec5+"sec.";
	set $date6$[$indice],gettime(5)+"/"+gettime(6)+"/"+gettime(7)+" à "+gettime(3)+"h"+gettime(2)+"min"+gettime(1)+"sec, au lvl "+readparam(11)+" Classe :"+classe+".";
	set $indice,$indice+1;                 //incrémente l'indice pour le prochain joueur qui rebornera.
	if ($indice==100) set $indice,$indice-1; //pour ne jamais demander un nom hors du tableau, le dernier sera effacé.
	if (readparam(11)==99) goto L_99; // file les recompenses aux lv 99
	jobchange 4001;
	resetlvl(1);
	skill 142,firstaid,0; //donne first aid au joueur si il l'avait.
	skill 143,1,0;  //donne act dead.
	next;
	mes "[Envoyée des Dieux]";
	mes " Ramenez les peuples sous la coupe des Dieux.";
	next;
	mes "";
	warp "new_1-1.gat",53,111;
	close;

L_99:
	set @charid,getcharid(0,""+strcharinfo(0)+"");
	set @card1,255;
	set @sc,0;
	set @ele,0;
	set @card2,@ele+((@sc*5)<<8);
	set @card3, @charid & 65535;
	set @card4, @charid >> 16;
	getitem2 5098,1,1,9,0,@card1,@card2,@card3,@card4;  // +9 Tiger mask ( x1 ) signé :)
	getitem rand(9026,9027),1;      // Un alice egg ou Zherlthsh egg aléatoirement. Sans equipement, car celui-ci n'existe pas encore.
	jobchange 4001;
	resetlvl(1);
	skill 142,firstaid,0; //donne first aid au joueur si il l'avait.
	skill 143,1,0;  //donne act dead
	next;
	mes "[Envoyée des Dieux]";
	mes " Ramenez les peuples sous la coupe des Dieux.";
	next;
	mes "";
	warp "new_1-1.gat",53,111;
	close;

L_HClasse1:
	if (readparam(12) > 0) goto L_SkPoints;
	mes "[Envoyée des Dieux]";
	mes "Les Dieux sont contents de vous.";
	mes "Acceptez-vous de continuer a les servir ?";
	menu "Non",L_non,"Oui",-;
	next;
	mes "[Envoyée des Dieux]";
	mes "Continuez à oeuvrer pour eux !";
	next;
	//met la high classe 1 en fonction de sa classe avant la reborn
	if ((classe==7)||(classe==13)) goto L_4002a; // Si Knight
	if ((classe==14)||(classe==21)) goto L_4002b; // Si Cruzader
	if (classe==8) goto L_4005a; // Si Priest
	if (classe==15) goto L_4005b; // Si Monk
	if (classe==9) goto L_4003a; // Si Wizard
	if (classe==16) goto L_4003b; // Si Sage
	if (classe==10) goto L_4006a; // Si Blacksmith
	if (classe==18) goto L_4006b; // Si Alchemist
	if (classe==11) goto L_4004a; // Si Hunter
	if (classe==19) goto L_4004b; // Si Bard
	if (classe==20) goto L_4004c; // Si Dancer
	if (classe==12) goto L_4007a; // Si Assassin
	if (classe==17) goto L_4007b; // Si Rogue
	menu "High Swordman",L_4002,"High Mage",L_4003,"High Archer",L_4004,"High Acolyte",L_4005,"High Merchant",L_4006,"High Thief",L_4007; // pour les SuperNovice
	L_4002:
		//Swordman si le perso était SN
		jobchange 4002;
		set job_ident,3;
		skill 144,mhprecov,0;
		skill 145,atkweak,0;
		skill 146,autobers,0;
		warp "prontera.gat",155,155;
		end;
	L_4002a:
		//Swordman si le perso était knight
		jobchange 4002;
		set job_ident,1;
		skill 144,mhprecov,0;
		skill 145,atkweak,0;
		skill 146,autobers,0;
		warp "prontera.gat",155,155;
		end;
	L_4002b:
		//Swordman si le perso était cruzader
		jobchange 4002;
		set job_indent,2;
		skill 144,mhprecov,0;
		skill 145,atkweak,0;
		skill 146,autobers,0;
		warp "prontera.gat",155,155;
		end;
	L_4003:
		//Mage si le perso était SN
		jobchange 4003;
		set job_ident,3;
		warp "prontera.gat",155,155;
		skill 157,energycoat,0;
		end;
	L_4003a:
		//Mage si le perso était Wizard
		jobchange 4003;
		set job_ident,1;
		warp "prontera.gat",155,155;
		skill 157,energycoat,0;
		end;
	L_4003b:
		//Mage si le perso était Sage
		jobchange 4003;
		set job_ident,2;
		warp "prontera.gat",155,155;
		skill 157,energycoat,0;
		end;
	L_4004:
		//Archer si le perso était SN
		jobchange 4004;
		set job_ident,3;
		skill 147,arrowcrea,0;
		skill 148,chargearrow,0;
		warp "prontera.gat",155,155;
		end;
	L_4004a:
		//Archer si le perso était Hunter
		jobchange 4004;
		set job_ident,1;
		skill 147,arrowcrea,0;
		skill 148,chargearrow,0;
		warp "prontera.gat",155,155;
		end;
	L_4004b:
		//Archer si le perso était Bard
		jobchange 4004;
		set job_ident,2;
		skill 147,arrowcrea,0;
		skill 148,chargearrow,0;
		warp "prontera.gat",155,155;
		end;
	L_4004c:
		//Archer si le perso était Dancer
		jobchange 4004;
		set job_ident,4;
		skill 147,arrowcrea,0;
		skill 148,chargearrow,0;
		warp "prontera.gat",155,155;
		end;

	L_4005:
		//Acolyte si le perso était SN
		jobchange 4005;
		set job_ident,3;
		skill 156,holylight,0;
		warp "prontera.gat",155,155;
		end;
	L_4005a:
		//Acolyte si le perso était Priest
		jobchange 4005;
		set job_ident,1;
		skill 156,holylight,0;
		warp "prontera.gat",155,155;
		end;
	L_4005b:
		//Acolyte si le perso était Monk
		jobchange 4005;
		set job_ident,2;
		skill 156,holylight,0;
		warp "prontera.gat",155,155;
		end;
	L_4006:
		//Merchant si le perso était SN
		jobchange 4006;
		set job_ident,3;
		skill 153,cartrevol,0;
		skill 154,changecart,0;
		skill 155,crazy,0;
		warp "prontera.gat",155,155;
		end;
	L_4006a:
		//Merchant si le perso était Blacksmith
		jobchange 4006;
		set job_ident,1;
		skill 153,cartrevol,0;
		skill 154,changecart,0;
		skill 155,crazy,0;
		warp "prontera.gat",155,155;
		end;
	L_4006b:
		//Merchant si le perso était Alchemist
		jobchange 4006;
		set job_ident,2;
		skill 153,cartrevol,0;
		skill 154,changecart,0;
		skill 155,crazy,0;
		warp "prontera.gat",155,155;
		end;
	L_4007:
		//Thief si le perso était SN
		jobchange 4007;
		set job_ident,3;
		skill 149,throwsand,0;
		skill 150,backslide,0;
		skill 151,takestone,0;
		skill 152,throwstone,0;
		warp "prontera.gat",155,155;
		end;
	L_4007a:
		//Thief si le perso était Assassin
		jobchange 4007;
		set job_ident,1;
		skill 149,throwsand,0;
		skill 150,backslide,0;
		skill 151,takestone,0;
		skill 152,throwstone,0;
		warp "prontera.gat",155,155;
		end;
	L_4007b:
		//Thief si le perso était Rogue
		jobchange 4007;
		set job_ident,2;
		skill 149,throwsand,0;
		skill 150,backslide,0;
		skill 151,takestone,0;
		skill 152,throwstone,0;
		warp "prontera.gat",155,155;
		end;

L_HClasse2:
	if (readparam(12) > 0) goto L_SkPoints;
	mes "[Envoyée des Dieux]";
	mes "Les Dieux sont contents de vous.";
	mes "Acceptez-vous de continuer a les servir ?";
	menu "Non",L_non,"Oui",-;
	next;
	mes "[Envoyée des Dieux]";
	mes "Continuez à oeuvrer pour eux !";
	next;
	if ((readparam(19)==4002) && (job_ident==1)) menu "Devenir Lord Knight",L_4008;
	if ((readparam(19)==4002) && (job_ident==2)) menu "Devenir Paladin",L_4015;
	if ((readparam(19)==4002) && (job_ident==3)) menu "Devenir Lord Knight",L_4008,"Devenir Paladin",L_4015;
	if ((readparam(19)==4003) && (job_ident==1)) menu "Devenir High Wizard",L_4010;
	if ((readparam(19)==4003) && (job_ident==2)) menu "Devenir Professor",L_4017;
	if ((readparam(19)==4003) && (job_ident==3)) menu "Devenir High Wizard",L_4010,"Devenir Professor",L_4017;
	if ((readparam(19)==4004) && (job_ident==1)) menu "Devenir Sniper",L_4012;
	if ((readparam(19)==4004) && (job_ident==2)) menu "Devenir Clown",L_4020;
	if ((readparam(19)==4004) && (job_ident==4)) menu "Devenir Gypsy",L_4021;
	if ((readparam(19)==4004) && (job_ident==3) && (readparam(21)==0)) menu "Devenir Sniper",L_4012,"Devenir Clown",L_4020;
	if ((readparam(19)==4004) && (job_ident==3) && (readparam(21)==1)) menu "Devenir Sniper",L_4012,"Devenir Gypsy",L_4021;
	if ((readparam(19)==4005) && (job_ident==1)) menu "Devenir High Priest",L_4009;
	if ((readparam(19)==4005) && (job_ident==2)) menu "Devenir Champion",L_4016;
	if ((readparam(19)==4005) && (job_ident==3)) menu "Devenir High Priest",L_4009,"Devenir Champion",L_4016;
	if ((readparam(19)==4006) && (job_ident==1)) menu "Devenir WhiteSmith",L_4011;
	if ((readparam(19)==4006) && (job_ident==2)) menu "Devenir Creator",L_4019;
	if ((readparam(19)==4006) && (job_ident==3)) menu "Devenir WhiteSmith",L_4011,"Devenir Creator",L_4019;
	if ((readparam(19)==4007) && (job_ident==1)) menu "Devenir Assassin Cross",L_4013;
	if ((readparam(19)==4007) && (job_ident==2)) menu "Devenir Stalker",L_4018;
	if ((readparam(19)==4007) && (job_ident==3)) menu "Devenir Assassin Cross",L_4013,"Devenir Stalker",L_4018;
	L_4008:
		//Lord Knight
		jobchange 4008;
		warp "prontera.gat",155,155;
		end;
	L_4009:
		//High Priest
		jobchange 4009;
		warp "prontera.gat",155,155;
		end;
	L_4010:
		//High Wizard
		jobchange 4010;
		warp "prontera.gat",155,155;
		end;
	L_4011:
		//WhiteSmith
		jobchange 4011;
		warp "prontera.gat",155,155;
		end;
	L_4012:
		//sniper
		jobchange 4012;
		warp "prontera.gat",155,155;
		end;
	L_4013:
		//assa cross
		jobchange 4013;
		warp "prontera.gat",155,155;
		end;
	L_4015:
		//paladin
		jobchange 4015;
		warp "prontera.gat",155,155;
		end;
	L_4016:
		//Champion
		jobchange 4016;
		warp "prontera.gat",155,155;
		end;
	L_4017:
		//professor
		jobchange 4017;
		warp "prontera.gat",155,155;
		end;
	L_4018:
		//stalker
		jobchange 4018;
		warp "prontera.gat",155,155;
		end;
	L_4019:
		//Alchimiste
		jobchange 4019;
		warp "prontera.gat",155,155;
		end;
	L_4020:
		//clown
		jobchange 4020;
		warp "prontera.gat",155,155;
		end;
	L_4021:
		//gypsy
		jobchange 4021;
		warp "prontera.gat",155,155;
		end;

L_Bienvenue:
	mes "[Envoyée des Dieux]";
	mes "Les Dieux sont contents de vous.";
	mes "Continuez à oeuvrer pour eux.";
	close;

L_Cart:
	mes "[Envoyée des Dieux]";
	mes "Veuillez enlever votre chariot.";
	close;

L_Falcon:
	mes "[Envoyée des Dieux]";
	mes "Veuillez liberer votre faucon.";
	close;

L_Peco:
	mes "[Envoyée des Dieux]";
	mes "Veuillez descendre de votre monture.";
	close;

L_SkPoints:
	mes "[Envoyée des Dieux]";
	mes "Veuillez utiliser tous vos points de compétence.";
	close;

L_Depostorage:
	mes "[Envoyée des Dieux]";
	mes "Veuillez vous devetir et placer toutes vos possessions ici.";
	close2;
	openstorage;
	end;

L_non:
	mes "[Envoyée des Dieux]";
	mes "Puissiez-vous un jour changer d'avis.";
	close;

L_Coliseum:
	//je sauvegarde deux date sous formes de 2variables chacunes (jour et mois)
	//si le type a deja combattu 2 fois aujourd'hui alors on le degage.
	if (((derniercombat1j == gettime(5))&&(derniercombat1m ==gettime(6)))&&((derniercombat2j == gettime(5))&&(derniercombat2m==gettime(6)))) goto Assez_combattu;
	if ($@manquejoueur==1) goto Check;
	if (getmapusers ("guild_vs1.gat") >0) goto L_occupe;
	setarray $@tabnom$[0],"","","","","","","","","","","","","","","","","","","","","","","",""; //24 perso max!
	mes "[Envoyée des Dieux]";
	mes "les Dieux sont particulierement content de vous !";
	next;
	mes "[Envoyée des Dieux]";
	mes "En conséquence, Ils vous autorisent à vous entrainer dans une arène spéciale. Cela vous coûtera 100'000 zenys par personne de votre groupe entrant dans l'arene.";
	next;
	mes "[Envoyée des Dieux]";
	mes "Vous ne pourrez y rester que quelques minutes, mais l'entrainement vous sera, à n'en point douter, profitable.";
	next;
	mes "[Envoyée des Dieux]";
	mes "Voulez-vous  entrer dans l'arene ?";
	menu "Oui",-,"Non",L_non;
	next;
	mes "[Envoyée des Dieux]";
	mes "Combien de partenaires avez-vous ?";
	input $@nbperso;
	if ($@nbperso>getarraysize($@tabnom$)) goto trop_de_monde;
	next;
	mes "[Envoyée des Dieux]";
	mes "Cela vous coûtera 100000 zenys";
	next;
	mes "[Envoyée des Dieux]";
	mes "Acceptez-vous ?";
	menu "Oui",-,"Non",L_non;
	if (Zeny<100000) goto No_Zeny;
	set Zeny,Zeny-100000;
	if ($@nbperso==0) goto L_warp;
	next;
	mes "[Envoyée des Dieux]";
	mes "Entrez les noms de vos partenaires";
	set @i,0;

	//Boucle permettant d'entrer le nom de tous les partenaires dans le tableau.
	L_Boucle:
		if (@i==$@nbperso) goto sortir_boucle;
		input $@tabnom$[@i];
		set @i,@i+1;
		goto L_Boucle;

	sortir_boucle:
	next;
	mes "[Envoyée des Dieux]";
	mes "Y-a-t-il des noms que j'aurais mal retranscrit ?";

	//Boucle affichant tous les noms du tableau
	set @i,0;
	L_Boucle4:
		if (@i==$@nbperso) goto la_suite;
		mes "Partenaire "+@i+" : "+$@tabnom$[@i];
		set @i,@i+1;
		goto L_Boucle4;

	la_suite:
	menu "Non",-,"Oui",L_Correction;
	next;
	mes "[Envoyée des Dieux]";
	mes "Veuillez patienter jusqu'à ce que votre équipe soit au complet.";
	next;
	mes "";
	if ((derniercombat1j == gettime(5))&&(derniercombat1m ==gettime(6))) set derniercombat2j,gettime(5);
	if ((derniercombat1j == gettime(5))&&(derniercombat1m ==gettime(6))) set derniercombat2m,gettime(6);
	if ((derniercombat1j != gettime(5))||(derniercombat1m != gettime(6))) set derniercombat1j,gettime(5);
	if ((derniercombat1j != gettime(5))||(derniercombat1m != gettime(6))) set derniercombat1m,gettime(6);
	set $@manquejoueur,1;
	set $@total,0;
	initnpctimer;
	setnpctimer 0; // je sais plus a quoi ca sert x_o et j'ai pas envie de chercher
	killmonsterall "guild_vs1.gat";
	warp "guild_vs1.gat",0,0;
	close;

L_Correction:
	//label permettant de corriger le nom d'un perso
	next;
	mes "[Envoyée des Dieux]";
	mes "Quel est le numéro du partenaire dont j'ai mal noté le nom ?";
	input @i;
	if (@i>=$@nbperso) goto L_impossible;
	next;
	mes "[Envoyée des Dieux]";
	mes "Donnez-moi l'orthographe correcte s'il vous plait.";
	input @nom$;
	set $@tabnom$[@i],@nom$; // corrige le nom
	goto sortir_boucle; // c'est le nom du label qui est comme ca, c'est pas une boucle ici.
	end;

L_impossible:
	next;
	mes "[Envoyée des Dieux]";
	mes "Il n'y a aucun partenaire associé à ce numéro.";
	mes "Revoici la liste";
	goto sortir_boucle;

L_warp:
	//warp un joueur seul
	cleararray $@tabnom$[0],"",24;
	if ((derniercombat1j == gettime(5))&&(derniercombat1m ==gettime(6))) set derniercombat2j,gettime(5);
	if ((derniercombat1j == gettime(5))&&(derniercombat1m ==gettime(6))) set derniercombat2m,gettime(6);
	if ((derniercombat1j != gettime(5))||(derniercombat1m != gettime(6))) set derniercombat1j,gettime(5);
	if ((derniercombat1j != gettime(5))||(derniercombat1m != gettime(6))) set derniercombat1m,gettime(6);
	killmonsterall "guild_vs1.gat";
	warp "guild_vs1.gat",0,0;
	set $@manquejoueur,0;
	set $@total,0;
	initnpctimer "spawneur";
	addtimer 900000,"spawneur::OnTimer";
	end;

L_occupe:
	mes "[Envoyée des Dieux]";
	mes "Désolée, mais le Coliseum est occupé. Patientez quelques minutes.";
	close;

trop_de_monde:
	next;
	mes "[Envoyée des Dieux]";
	set @maxusers,1+getarraysize($@tabnom$);
	mes "Désolée, mais le Coliseum ne peut contenir plus de "+@maxusers+" personnes.";
	close;

No_Zeny:
	next;
	mes "[Envoyée des Dieux]";
	mes "Vous n'avez pas suffisament de zeny.";
	close;

OnTimer120000:
	mapannounce "guild_vs1.gat","Envoyée des Dieux : Vos partenaires ont été trop long à se presenter à moi.",0;
	end;
OnTimer122000:
	mapannounce "guild_vs1.gat","Envoyée des Dieux : L'arène est désormais close.",0;
	end;
OnTimer124000:
	mapannounce "guild_vs1.gat","Envoyée des Dieux : Vous combattrez sans eux.",0;
	goto debut_baston;
	end;

Check:
	//si le type a deja combattu 2 fois aujourd'hui alors on le degage.
	if (((derniercombat1j == gettime(5))&&(derniercombat1m ==gettime(6)))&&((derniercombat2j == gettime(5))&&(derniercombat2m==gettime(6)))) goto Assez_combattu;
	set @i,0;
	L_Boucle2:
		if (@i== $@nbperso) goto L_occupe;
		if (strcharinfo(0)==$@tabnom$[@i]) goto ajout;
		set @i,@i+1;
		goto L_Boucle2;

	ajout:
		mes "[Envoyée des Dieux]";
		mes "Votre nom est inscrit sur ma liste. Vous etes attendu dans le Coliseum.";
		next;
		mes "[Envoyée des Dieux]";
		mes "Souhaitez vous rejoindre vos compagnons pour 100000zenys ?";
		menu "Oui",-,"Non",L_non;
		if (Zeny < 100000) goto No_Zeny;
		set Zeny,Zeny-100000;
		set $@total,$@total+1;
		if ((derniercombat1j == gettime(5))&&(derniercombat1m ==gettime(6))) set derniercombat2j,gettime(5);
		if ((derniercombat1j == gettime(5))&&(derniercombat1m ==gettime(6))) set derniercombat2m,gettime(6);
		if ((derniercombat1j != gettime(5))||(derniercombat1m != gettime(6))) set derniercombat1j,gettime(5);
		if ((derniercombat1j != gettime(5))||(derniercombat1m != gettime(6))) set derniercombat1m,gettime(6);
		warp "guild_vs1.gat",0,0;
		if ($@total==$@nbperso) goto debut_baston;
		end;

debut_baston:
	stopnpctimer;
	set $@manquejoueur,0;
	set $@total,0;
	cleararray $@tabnom$[0],"",24;
	deltimer "Envoyée des Dieux::OnTimer";
	initnpctimer "spawneur";
	addtimer 900000,"spawneur::OnTimer"; //15min avant kickage
	end;

Assez_combattu:
	mes "[Envoyée des Dieux]";
	mes "Vous avez suffisament combattu pour aujourd'hui. Reposez-vous et essayez de tirer le maximum de leçons de vos combats.";
	close;

L_GM:

		//label pour les GMs qui permet d'avoir acces au tableau dans lequel sont sauvegardés tous les types qui ont reborn.
		menu "Voir tous les joueurs reborn",L_allreborn,"Info sur un joueur precis",-,"Info sur un joueur precis (broad)",L_savejoueur,"Voir tous les joueurs",L_all,"Voir tous les joueurs (broad)",L_saveall,"Remettre a 0 les indices",L_modifindice,"Derniere save",Last_save,"set sage0",sage0,"set sage1",sage1,"set sage2",sage2,"set sage3",sage3,"set sage4",sage4,"set sage5",sage5,"Quitter",L_quitter;
		//tu donne un nombre et ca te sort les valeurs associées dans les differents tableau :
		//c'est a dire, nom+date de reusssite des differentes epreuves.
			input @i;
			mes "Nom: "+$persoreborn$[@i];
			mes "Livre: "+$date1$[@i];
			mes "Esprit: "+$date2$[@i];
			mes "Corps: "+$date3$[@i];
			mes "Volonté: "+$date4$[@i];
			mes "Yggdras: "+$date5$[@i];
			mes "Reborn: "+$date6$[@i];
			close;
		sage0:
			set sage,0;
			goto L_GM;
		sage1:
			set sage,1;
			goto L_GM;
		sage2:
			set sage,2;
			goto L_GM;
		sage3:
			set sage,3;
			goto L_GM;
		sage4:
			set sage,4;
			goto L_GM;
		sage5:
			set sage,5;
			goto L_GM;

		//ca affiche tous les noms des joueurs qui ont reborn
		L_allreborn:
			set @i,0;
			mes "[Envoyée des Dieux]";
			mes "Voici la liste des perso ayant reborn";
			next;
			L_BoucleGM:
				mes "Nom "+@i+" : "+$persoreborn$[@i];
				if (@i>=$indice-1) goto L_GM;
				set @i,@i+1;
			goto L_BoucleGM;

		//ca passe un broad visible que par le GM en donnant les info sur un joueurs precis afin que le GM puisse /report
		L_savejoueur:
			input @i;
			announce "Nom: "+$persoreborn$[@i],3;
			announce "Livre: "+$date1$[@i],3;
			announce "Esprit: "+$date2$[@i],3;
			announce "Corps: "+$date3$[@i],3;
			announce "Volonté: "+$date4$[@i],3;
			announce "Yggdras: "+$date5$[@i],3;
			announce "Reborn: "+$date6$[@i],3;
			announce "",3;
			close;

		//ca ecrit dans une fenetre de dialogue toutes les infos sur tous les joueurs qui ont reborn
		L_all :
			set @i,0;
			mes "Voici la liste des perso ayant reborn";
			next;
			L_BoucleGM2:
				mes "Nom "+@i+" : "+$persoreborn$[@i];
				mes "Livre: "+$date1$[@i];
				mes "Esprit: "+$date2$[@i];
				mes "Corps: "+$date3$[@i];
				mes "Volonté: "+$date4$[@i];
				mes "Yggdras: "+$date5$[@i];
				mes "Reborn: "+$date6$[@i];
				mes "";
				if (@i>=$indice-1) goto L_GM;
				set @i,@i+1;
			goto L_BoucleGM2;


		//ca passe un broad en donnant les info de tous les joueurs, et ca remet l'indice a 0
		//en clair, le prochain joueur qui vient reborn se retrouvera a la case 0 du tableau, ca réinitialise quoi
		//donc si cette option est utilisée faut bien utiliser /report sinon toutes les infos seront perdues !
		L_saveall :
			set @j,0;
			mes " /report pour savegarder.";
			next;
		pom:
			if (@j !=0) mes "mettez /report en raccourci (alt+m) et excécutez le a chaque fois que vous voyez ce message. Attention, les données vont etre effacées, alors sauvegardez bien.";
			next;
			set @i,@j*20; // lire les noms 20 par 20 sinon ca deborde de la fenetre de chat.
			set @j,@j+1;
			L_BoucleGM3:
				if (@j==6) goto L_GM;
				if (@i==(20*@j)) goto pom;
				announce "Nom: "+$persoreborn$[@i],3;
				announce "Livre: "+$date1$[@i],3;
				announce "Esprit: "+$date2$[@i],3;
				announce "Corps: "+$date3$[@i],3;
				announce "Volonté: "+$date4$[@i],3;
				announce "Yggdras: "+$date5$[@i],3;
				announce "Reborn: "+$date6$[@i],3;
				announce "",3;
				set @i,@i+1;
				if (@i >= $indice) goto L_GM;
				goto L_BoucleGM3;

		L_modifindice:
			mes "indices modifiés.";
			set $sauveur$,strcharinfo(0);
			set $savedate$,gettime(5)+"/"+gettime(6)+"/"+gettime(7)+" à "+gettime(3)+"h"+gettime(2)+"min"+gettime(1)+"sec.";
			set $indice,0;
			goto L_GM;

		//ca affiche le nom du dernier GM qui a save
		Last_save:
			mes "La derniere sauvegarde a été effectuée par "+$sauveur$;
			mes "Date : "+$savedate$;
			close;

		L_quitter:
			close;
			end;
}

guild_vs1.gat,1,1,0	script	spawneur	-1,{

// NPC qui spawn les MvP dans le coliseum.
OnTimer2000:
	mapannounce "guild_vs1.gat","Début du combat dans 15 secondes.",0;
	// Les ID de tous les MvPs
	set $@mob,rand(1,29);
	if ($@mob==1)  set $@mob,1038; // Osiris
	if ($@mob==2)  set $@mob,1039; // Baphomet
	if ($@mob==3)  set $@mob,1046; // Doppleganger
	if ($@mob==4)  set $@mob,1059; // Mistress
	if ($@mob==5)  set $@mob,1086; // Golden Thief Bug
	if ($@mob==6)  set $@mob,1087; // Orc Hero
	if ($@mob==7)  set $@mob,1096; // Angeling
	if ($@mob==8)  set $@mob,1112; // Drake
	if ($@mob==9)  set $@mob,1115; // Eddga
	if ($@mob==10) set $@mob,1120; // Ghostring
	if ($@mob==11) set $@mob,1147; // Maya
	if ($@mob==12) set $@mob,1150; // Moonlight
	if ($@mob==13) set $@mob,1157; // Pharaoh
	if ($@mob==14) set $@mob,1159; // Phreeoni
	if ($@mob==15) set $@mob,1190; // Orc Lord
	if ($@mob==16) set $@mob,1219; // Knight of abyss
	if ($@mob==17) set $@mob,1251; // Stormy Knight
	if ($@mob==18) set $@mob,1252; // Garm
	if ($@mob==19) set $@mob,1259; // Gryphon
	if ($@mob==20) set $@mob,1272; // Dark lord
	if ($@mob==21) set $@mob,1283; // Chimera
	if ($@mob==22) set $@mob,1312; // Turtle General
	if ($@mob==23) set $@mob,1373; // Lord Of Death
	if ($@mob==24) set $@mob,1388; // Archangeling
	if ($@mob==25) set $@mob,1389; // Dracula
	if ($@mob==26) set $@mob,1418; // Evil Snake Lord
	if ($@mob==27) set $@mob,1492; // Incantation Samuraï
	if ($@mob==28) set $@mob,1511; // Amon Ra
	if ($@mob==29) set $@mob,1518; // Bacsojin
	end;

OnTimer7000:
	mapannounce "guild_vs1.gat","Début du combat dans 10 secondes.",0;
	end;
OnTimer12000:
	mapannounce "guild_vs1.gat","Début du combat dans 5 secondes.",0;
	end;
OnTimer14000:
	mapannounce "guild_vs1.gat","Début du combat dans 3 secondes.",0;
	end;
OnTimer15000:
	mapannounce "guild_vs1.gat","Début du combat dans 2 secondes.",0;
	end;
OnTimer16000:
	mapannounce "guild_vs1.gat","Début du combat dans 1 seconde.",0;
	end;

OnTimer17000:
	monster "guild_vs1.gat",50,50,"Démon",$@mob,1,"spawneur::OnMobDead";
	stopnpctimer;
	end;

OnMobDead:
	initnpctimer;
	setnpctimer 0;
	end;

OnTimer:
	mapannounce "guild_vs1.gat","Envoyée des Dieux : Vous avez bien combatut ! Il est temps de vous reposer.",0;
	cleararray $@tabnom$[0],"",24;
	set $@manquejoueur,0;
	set $@total,0;
	killmonsterall "guild_vs1.gat";
	mapwarp "guild_vs1.gat","prontera.gat",155,155;
	end;
}

//==========================================================================================================================

// function HIGH NOVICE -> HIGH 1
//getarg(0) - High Job ID
//getarg(1) - High Job Name
//getarg(2) - 3rd Job ID
//getarg(3) - 3rd Job Name
//getarg(4) - Quest Skill N? You can pass 0, if there's no Quest Skill
//getarg(5) - Quest Skill N?
//getarg(6) - Quest Skill N?
//getarg(7) - Quest Skill N?
//getarg(8) - current NPC's name

function	script	F_ToHigh	{
	if(Upper == 2) return; //Baby Class - skip it
	set @fjob,ADVJOB; //alternative classes should pass, too
	if(@fjob == Job_Rogue + 4001 ) set @fjob,Job_Assassin+4001;
	if(@fjob == Job_Alchem + 4001 ) set @fjob,Job_Blacksmith+4001;
	if(@fjob == Job_Bard + 4001 || @fjob == Job_Dancer + 4001 ) set @fjob,Job_Hunter+4001;
	if(@fjob == Job_Crusader + 4001 ) set @fjob,Job_Knight+4001;
	if(@fjob == Job_Monk + 4001 ) set @fjob,Job_Priest+4001;
	if(@fjob == Job_Sage + 4001 ) set @fjob,Job_Wizard+4001;

	if(Class == 3977+getarg(0) ) goto L_WELCOME; //3rd Job
	if(Class >= 4008) goto L_ALREADY; //already advanced class
	if(Class == 4001 && @fjob == 3977+getarg(2) ) goto L_GETHIGH; //High Novice -> High XXXX
	if(Class == 4001) mes "Hello, Novice High! If you are going to became a "+getarg(1)+", then go visit your very first job teacher.";
	if(Class == 4001) close;
	return; //this char doesn't want to get HIGH class

L_GETHIGH:
	mes "["+getarg(8)+"]";
	if(JobLevel < 10) goto L_NOTREADY;
	if(checkcart(0)) goto L_CART;
	if(checkfalcon(0)) goto L_FALCON;
	if(checkriding(0)) goto L_PECO;
	if(skillpoint > 0) goto L_SKILLPNTS;

	mes "Hello there, "+strcharinfo(0)+"!";
	mes "You've made a brave choice in coming here to be reborn and stepping forth into the advanced ranks.";
	mes "Now... close your eyes.";
	next;
	mes "["+getarg(8)+"]";
	mes "Open your eyes.";
	mes "You have become a "+getarg(1)+".";
	jobchange getarg(0); //High Class
	next;
	if (!(QSK1 || QSK2 || QSK3 || QSK4)) goto L_NO_QSKILL;
	mes "["+getarg(8)+"]";
	mes "Let me just add in the missing Quest Skills you lost under the Reborn process, "+strcharinfo(0)+".";
	next;
//return learnt quest skills
	if (getarg(4)) skill getarg(4),QSK1,0;
	set SQK1,0;
	if (getarg(5)) skill getarg(5),QSK2,0;
	set SQK2,0;
	if (getarg(6)) skill getarg(6),QSK3,0;
	set SQK3,0;
	if (getarg(7)) skill getarg(7),QSK4,0;
	set SQK4,0;

L_NO_QSKILL:
	mes "["+getarg(8)+"]";
	mes "I wish you good fortune in the near future!";
	emotion 46;
	close;

L_NOTREADY:
	mes "You are not ready to become a "+getarg(1)+".";
	mes "You have to raise your Job Level to 10.";
	emotion 0;
	close;

L_SKILLPNTS:
	mes "You will need to use up all of your skill points if you want me to continue.";
	emotion 20;
	close;

L_CART:
	mes "Please, drop your cart and we'll continue.";
	emotion 20;
	close;

L_FALCON:
	mes "Please, free your Falcon and we'll continue.";
	emotion 20;
	close;

L_PECO:
	mes "Please, free your Pecopeco and we'll continue.";
	emotion 20;
	close;

L_WELCOME:
	mes "["+getarg(8)+"]";
	mes "You are welcome, "+strcharinfo(0)+"!";
	mes "We're always glad to see a "+getarg(1)+" here!";
	close;

L_ALREADY:
	mes "["+getarg(8)+"]";
	mes "It's such a big honor to salute envoys of Valhalla.";
	mes "Come again.";
	emotion 2;
	close;
}

// function GET 3rd JOB
//getarg(0) - High Job ID
//getarg(1) - High Job Name
//getarg(2) - 3rd Job ID
//getarg(3) - 3rd Job Name
function	script	F_Rebirth	{
	mes "["+getarg(3)+"]";
	if(Upper == 2) goto L_BABY; //Baby Class - skip it
	if(Class >= 4008) goto L_ALREADY; //already advanced class
	if(Class == (3977+getarg(0)) && ADVJOB == (3977+getarg(2))) goto L_GET3RD; //Hight XXXX -> 3rd Job
	mes "Go talk to either Valhallana or one of my collegues...";
	emotion 17;
	close;

L_GET3RD:
	if(JobLevel < 45) goto L_NOTREADY;
	if(checkcart(0)) goto L_CART;
	if(checkfalcon(0)) goto L_FALCON;
	if(checkriding(0)) goto L_PECO;
	if(skillpoint > 0) goto L_SKILLPNTS;

	mes "Congratulations!";
	mes "You have trained well. Now stroll here as a "+getarg(3)+"!";
	jobchange getarg(2); //Rebirth Class
	set ADVJOB,0;
	close;

L_NOTREADY:
	mes "You have went so far to get here. But I am sorry, you aren't quite ready to become a "+getarg(3)+".";
	mes "You need at least Job Level 45 or higher.";
	emotion 0;
	close;

L_SKILLPNTS:
	mes "You will need to use up all of your skill points if you want me to continue.";
	emotion 20;
	close;

L_CART:
	mes "Please, drop your cart and we'll continue.";
	emotion 20;
	close;

L_FALCON:
	mes "Please, free your Falcon and we'll continue.";
	emotion 20;
	close;

L_PECO:
	mes "Please, free your Pecopeco and we'll continue.";
	emotion 20;
	close;

L_ALREADY:
	mes "Well, hello there! You have been reborn once, there is no second chance.";
	emotion 2;
	close;

L_BABY:
	mes "What a lively baby!";
	mes "How did you get here? Go to aunt Valhallana and ask her to take your home.";
	emotion 41;
	close;
}

// function GUIDE player to Valhalla for getting 3rd JOB
// this function prevents passing 2nd JOB QUESTS by advanced classes also
//getarg(0) - High Job ID
//getarg(1) - High Job Name
//getarg(2) - 3rd Job ID
//getarg(3) - 3rd Job Name
//getarg(4) - NPC Name
function	script	F_BlockHigh	{
	if(Upper != 1) return; //This func should interact with Advanced classes only
	mes "["+getarg(4)+"]";
	if(Class == (3977+getarg(0)) && ADVJOB == (3977+getarg(2))) goto L_RIGHTHIGH;
	if(Class == (3977+getarg(2))) goto L_RIGHT3RD;
	if(Class >= 4008) goto L_ALREADY3RD; //already advanced class, but from wrong guild
//this player is a High Novice
	if(Class == 4001) mes "Hello, Novice High! If you are going to became a "+getarg(1)+", then go visit your very first job teacher.";
//this player has 1st advanced job, but from wrong guild
	if(Class != 4001) mes "A "+getarg(1)+"? Rumors say only Valhallana knows your way...";
	emotion 17;
	close;

L_RIGHT3RD:
	mes "Well, hello there! You look... younger.";
	emotion 20;
	next;
	mes "["+getarg(4)+"]";
	mes "You are always welcome here, "+strcharinfo(0)+"!";
	mes "Our good old guild is your second home, isn't it?";
	emotion 21;
	close;

L_RIGHTHIGH:
	mes "Hello, "+strcharinfo(0)+"!";
	mes "If you are going to become a "+getarg(3)+", then you should visit Valhalla again.";
	if(JobLevel < 45) mes "But you need at least Job Level 45 or higher.";
	emotion 0;
	close;

L_ALREADY3RD:
	mes "A "+getarg(3)+"?";
	mes "You don't belong to our guild. Begone!";
	emotion 23;
	close;
}